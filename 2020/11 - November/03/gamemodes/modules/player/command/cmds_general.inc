#include YSI\y_hooks

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(PlayerInfo[playerid][Logado] == false){
        SendClientMessage(playerid, Erro, "Você não está logado");
        return 0;
    }

    if(strcmp(cmd, "sairafk", true))
    {
        if(AntiAfk[playerid][aa_afk] == true){
            SendClientMessage(playerid, Erro, "Antes de usar comando, digite: /Sairafk");
            return 0;
        }
        if(Algemado[playerid] == true){
            SendClientMessage(playerid, Erro, "Você está algemado e não pode usar comando");
            return 0;
        }
        if(PrisonEnum[playerid][pTempo] != 0)
        {
            if(!strcmp(PrisonEnum[playerid][pCadeia], "Municipal"))
            {
                if(!strcmp(cmd, "aceitar") || !strcmp(cmd, "recusar") || !strcmp(cmd, "advogados") || !strcmp(cmd, "advogado")) return 1;
            }
            SendClientMessage(playerid, Erro, "Você está preso e não pode usar comando");
            return 0;
        }
        if(IsArena[playerid])
        {
            if(!strcmp(cmd, "sairarena")) return 1;

            SendClientMessage(playerid, Erro, "Você está na arena e não pode usar comando");
            return 0;
        }
        if(PlayerInfo[playerid][tutorial]){
            SendClientMessage(playerid, Erro, "Você está no tutorial e não pode usar comando");
            return 0;
        }
        if(PlayerInfo[playerid][load]){
            SendClientMessage(playerid, Erro, "Seus dados estão sendo carregado, aguarde alguns segundos...");
            return 0;
        }
        if(Light_Repairing[playerid]){
            SendClientMessage(playerid, Erro, "Você está efetuando um reparo e não pode usar comandos");
            return 0;
        }
        if(PlayerRepairVehicle[playerid]){
            SendClientMessage(playerid, Erro, "Você está efetuando um conserto e não pode usar comandos");
            return 0;
        }
        if(PlayerInfo[playerid][pds_in])
        {
            if(!strcmp(cmd, "cancelarprova")) return 1;

            SendClientMessage(playerid, Erro, "Você está realizando prova na Auto Escola e não pode usar comandos");
            return 0;
        }
        if(producerState[playerid])
        {
            SendClientMessage(playerid, Erro, "Você está produzindo arma e não pode usar comandos");
            return 0;
        }
        if(MotoBoy[playerid][mb_getOrSet])
        {
            format(String, MAX_STRING, "Você está %s o pedido e não pode usar comandos", ( MotoBoy[playerid][mb_business] ? ("pegando") : ("entregando")));
            SendClientMessage(playerid, Erro, String);
            return 0;
        }
    }
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(result == -1)
    {
        SendClientMessage(playerid, Erro, "Comando Inválido");
        return 0;
    }

    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerHelper(i) && viewcmds[i] == true)
        {
            format(String, MAX_STRING, "VRC-Admin ~ O(A) jogador(a) %s[%d] digitou o comando: /%s", PlayerInfo[playerid][Nome], playerid, cmd);
            SendClientMessage(i, adm, String);
        }
    }

    if(AntiAfk[playerid][aa_warning] > 0) AntiAfk[playerid][aa_warning]--;

    return 1;
}

/******************************************************************************/
/*****************************| COMMANDS GERAIS |******************************/
/******************************************************************************/

CMD:reabastecer(playerid)
{
    if(!PlayerInfo[playerid][havegallon])
        return SendClientMessage(playerid, Erro, "Você não tem nenhum Galão de Combustível");

    if(!PlayerInfo[playerid][gallon])
        return SendClientMessage(playerid, Erro, "Seu Galão de Combustível está vazio");

    new Float:x, Float:y, Float:z;

    for(new vehicleid = 0; vehicleid < MAX_VEHICLES; vehicleid++)
    {
        GetVehiclePos(PublicVehicle[vehicleid][pv_vehicle], x , y, z);

        if(PublicVehicle[vehicleid][pv_vehicle] == INVALID_VEHICLE_ID)
            continue;

        if(!IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
            continue;

        if(IsPlayerInAnyVehicle(playerid))
            return SendClientMessage(playerid, Erro, "Para reabastecer precisa sair do veículo");

        if(PublicVehicle[vehicleid][pv_gasoline])
            return SendClientMessage(playerid, Erro, "Esse veículo ainda tem gasolina");

        PlayerInfo[playerid][gallon] = 0;
        PublicVehicle[vehicleid][pv_gasoline] = 10;
        SendClientMessage(playerid, White, "O veículo foi reabastecido, mesmo assim vá até o Posto de Gasolina mas próximo");
        return 1;
    }

    SendClientMessage(playerid, Erro, "Você está longe do veículo, chegue mais perto");
    return 1;
}
CMD:vendercelular(playerid)
{
    if(PlayerInfo[playerid][cellphone] == 0)
        return SendClientMessage(playerid, Erro, "Você não tem nenhum celular");

    PlayerInfo[playerid][cellphone] = 0;
    SetIntQuery(playerid, "Itens", "celular", PlayerInfo[playerid][cellphone]);

    SendClientMessage(playerid, Green, "Celular vendido com sucesso");
    return 1;
}
CMD:usarkit(playerid)
{
    if(PlayerInfo[playerid][medicalkit] == 0)
        return SendClientMessage(playerid, Erro, "Você não tem nenhum Kit Médico");

    new Float:health;
    GetPlayerHealth(playerid, health);

    if(health > 50.0)
        return SendClientMessage(playerid, Erro, "Sua vida precisa estar abaixo de 50 porcento");

    PlayerInfo[playerid][Health] = 100.0;
    SetPlayerHealth(playerid, PlayerInfo[playerid][Health]);

    PlayerInfo[playerid][medicalkit]--;
    SetIntQuery(playerid, "Itens", "kitmedicos", PlayerInfo[playerid][medicalkit]);

    format(String, MAX_STRING, "KIT-MÉDICO ~ Você utilizou um kit médico e a sua vida foi recuperada ( Kit médico disponivél: %d )", PlayerInfo[playerid][medicalkit]);
    SendClientMessage(playerid, Green, String);
    return 1;
}
CMD:sms(playerid, params[])
{
    if(PlayerInfo[playerid][cellphone] == 0)
        return SendClientMessage(playerid, Erro, "Você não tem um celular");

    if(PlayerInfo[playerid][sms] == 0)
        return SendClientMessage(playerid, Erro, "Você não tem sms suficiente");

    new tmp[128], id;

    if(sscanf(params, "us[128]", id, tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Sms [id/nome] [mensagem]");

    if(id == INVALID_PLAYER_ID || !PlayerInfo[id][Logado])
        return SendClientMessage(playerid, Erro, "Jogador(a) não conectado(a)");

    if(playerid == id)
            return SendClientMessage(playerid, Erro, "Você não pode efetuar comando em sí mesmo");

    if(PlayerInfo[id][cellphone] == 0)
        return SendClientMessage(playerid, Erro, "O(A) Jogador(a) não tem celular");

    if(IsArena[id])
        return SendClientMessage(playerid, Erro, "Jogador(a) está na Arena");

    format(String, MAX_STRING, "SMS ~ Enviadado para %s[%d] ( %s )", PlayerInfo[id][Nome], id, tmp);
    SendClientMessage(playerid, 0xC0C0C0AA, String);
    GameTextForPlayer(playerid, "~w~mensagem ~w~enviada!" , 2500, 1);
    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);

    format(String, MAX_STRING, "SMS ~ Recebido de %s[%d] ( %s )", PlayerInfo[playerid][Nome], playerid, tmp);
    SendClientMessage(id, 0x808080AA, String);
    GameTextForPlayer(id, "~w~mensagem ~w~recebida!" , 2500, 1);
    PlayerPlaySound(id, 1085, 0.0, 0.0, 0.0);

    PlayerInfo[playerid][sms]--;
    SetIntQuery(playerid, "Itens", "sms", PlayerInfo[playerid][sms]);

    return 1;
}
CMD:comandoscasa(playerid)
{
    new txt[300];
    strcat(txt, "{FF0000}Comandos \t\t {1CEB00}Informações \n");
    strcat(txt, "{87CEFF}/EntrarCasa \t\t Para entrar na casa\n");
    strcat(txt, "{87CEFF}/SairCasa \t\t Para sair da casa\n");
    strcat(txt, "{87CEFF}/ComprarCasa \t\t Para comprar a casa\n");
    strcat(txt, "{87CEFF}/MenuCasa \t\t Para ver outros comandos da casa\n");
    ShowPlayerDialog(playerid, MAIN_HOUSE_COMMAND, DIALOG_STYLE_TABLIST_HEADERS, "{C0C0C0}Comandos Casa", txt, "Fechar", #);
    return 1;
}
CMD:reais(playerid)
{
    ShowPlayerDialog(playerid, main_reais, DIALOG_STYLE_LIST, "{FF0000}Reais", "{FFFFFF}Comprar VIP", "Continuar", "Cancelar");
    return 1;
}
CMD:profissao(playerid)
{
    new txt[1500];

    if(!IsPlayerMobile(playerid))
        { strcat(txt, "{FF0000}Comandos \t\t {FFFFFF}Informações \n"); }

    switch(PlayerInfo[playerid][Profissao])
    {
        case unemployed:
        {
            new string[1000];
            strcat(string, "{FFFFFF}Você está desempregado, para conseguir um vá até a Agencia de Empregos em uma das 3 cidades de san andreas \n\n");
            strcat(string, "{FFFFFF}Los Santos - Está localizado perto da praia de Santa Maria \n\n");
            strcat(string, "{FFFFFF}Las Venturas - Está localizado perto do Aero Porto \n\n");
            strcat(string, "{FFFFFF}San Fierro - Está localizado perto da Estação Ferroviária \n\n");
            strcat(string, "{FFFFFF}Todas as Agências de Empregos tem um simbolo de uma {1e90ff}Caveira Azul {FFFFFF}no Radar \n\n");
            ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Desempregado", string, "Fechar", #);
            return 1;
        }
        case newspaperdelivery:
        {
            strcat(txt, "{80FF80}/Pegarjornais {FFFFFF}\t\t Para pegar 20 jornais \n");
            strcat(txt, "{80FF80}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
        }
        case icecream:
        {
            strcat(txt, "{80FF80}/VenderSorvete {FFFFFF}\t\t Para oferecer sorvete à um determinado jogador(a) \n\n");
        }
        case pizzaboy:
        {
            strcat(txt, "{FFFF80}Precione \"Y\"{FFFFFF}\t\t Para criar veículo profissão \n");
            strcat(txt, "{FFFF80}Precione \"N\" {FFFFFF}\t\t Para pegar/entregar pizza \n");
            strcat(txt, "{FFFF80}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
        }
        case motoboy:
        {
            strcat(txt, "{FF00FF}Pedidos {FFFFFF}\t\t Os pedidos são gerados à cada 1 minuto \n\n");
            strcat(txt, "{FF00FF}/Radar {FFFFFF}\t\t Para ativar/desativar os pedidos \n");
            strcat(txt, "{FF00FF}/AceitarPedido {FFFFFF}\t\t Para aceitar um serviço \n");
            strcat(txt, "{FF00FF}/Cancelar {FFFFFF}\t\t Para cancelar o serviço \n\n");
        }
        case gari:
        {
            strcat(txt, "{D56A00}Precione \"Y\"{FFFFFF}\t\t Para criar veículo profissão \n");
            strcat(txt, "{D56A00}Precione \"N\" {FFFFFF}\t\t Para pegar/remover um lixo \n");
        }
        case paramedic:
        {
            strcat(txt, "{00FF80}/VenderCura {FFFFFF}\t\t Para oferecer cura à um determinado jogador(a) \n");
            strcat(txt, "{00FF80}/VenderVacina {FFFFFF}\t\t Para oferecer vacina à um determinado jogador(a) \n");
            strcat(txt, "{00FF80}/Localizar {FFFFFF}\t\t Para localizar um(a) jogador(a) \n");
            strcat(txt, "{00FF80}/Doentes {FFFFFF}\t\t Para ver as vítimas das doenças \n");
            strcat(txt, "{00FF80}Precione \"N\" {FFFFFF}\t\t Para uniformizar-se \n");
        }
        case light:
        {
            strcat(txt, "{008040}/Iniciar {FFFFFF}\t\t Para iníciar as rotas de consertos \n");
            strcat(txt, "{008040}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
            strcat(txt, "{008040}Precione \"N\" {FFFFFF}\t\t Para uniformizar-se \n");
        }
        case lawyer:
        {
            strcat(txt, "{8000FF}/Presos {FFFFFF}\t\t Para ver s jogador(a) que está preso(a) \n");
            strcat(txt, "{8000FF}/Soltar {FFFFFF}\t\t Para soltar um determinado jogador(a) \n\n");
        }
        case taxi:
        {
            strcat(txt, "{FFFF00}/Localizar {FFFFFF}\t\t Para localizar o cliente \n\n");
        }
        case tanker:
        {
            strcat(txt, "{808080}Precione \"N\" {FFFFFF}\t\t Para carregar/descarregar o tanque de petróleo \n");
            strcat(txt, "{808080}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
        }
        case loader:
        {
            strcat(txt, "{408080}/Carregar {FFFFFF}\t\t Para carregar as entregas \n");
            strcat(txt, "{408080}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
        }
        case strongcardriver:
        {
            strcat(txt, "{8080FF}Precione \"N\" {FFFFFF}\t\t Para carregar/descarregar o Carro Forte \n");
            strcat(txt, "{8080FF}/Cancelar {FFFFFF}\t\t Para cancelar as entregas \n\n");
        }
        case strongcarsecurity:
        {
            strcat(txt, "{B7B7FF}/Seguranca {FFFFFF}\t\t Para realizar segurança \n");
            strcat(txt, "{B7B7FF}Saia {FFFFFF}\t\t Para cancelar segurança \n\n");
        }
        case military..interpol:
        {
            strcat(txt, "{FFFFFF}Aperte '{4AA5FF}F{FFFFFF}' ou '{4AA5FF}Enter{FFFFFF}' {FFFFFF}\t\t Para abrir o portão do derpartamento\n");
            strcat(txt, "{4AA5FF}/Prenderarmas {FFFFFF}\t\t Para apreender as armas de um(a) jogador(a) \n");
            strcat(txt, "{4AA5FF}/Localizar  {FFFFFF}\t\t Para localizar o(a) procurado(a) \n");
            strcat(txt, "{4AA5FF}/Algemar {FFFFFF}\t\t Para algemar o(a) procurado(a) \n");
            strcat(txt, "{4AA5FF}/Prender {FFFFFF}\t\t Para prender o(a) procurado(a) \n");
            strcat(txt, "{4AA5FF}/Abordar {FFFFFF}\t\t Para abordar o(a) procurado(a) \n");
            strcat(txt, "{4AA5FF}/Tapete {FFFFFF}\t\t Para criar/remover um tapete de pregos \n");
            strcat(txt, "{4AA5FF}/Barreira {FFFFFF}\t\t Para criar/remover uma barreira \n");
            strcat(txt, "{4AA5FF}/Equipar {FFFFFF}\t\t Para equipar armas e colete \n");
            strcat(txt, "{4AA5FF}/RemoverUniforme {FFFFFF}\t\t Para remover o uniforme \n\n");
            strcat(txt, "{4AA5FF}Precione \"N\" {FFFFFF}\t\t Para uniformizar-se \n");
        }
        case internalaffairs:
        {
            strcat(txt, "{8080C0}/PrenderPolicial [id] [motivo] {FFFFFF}\t\t Para prender o(a) policial \n\n");
        }
        case potplanter:
        {
            strcat(txt, "{550000}/Plantar {FFFFFF}\t\t Para plantar Cannabis\n");
            strcat(txt, "{550000}/Colher {FFFFFF}\t\t Para colher Cannabis\n");
            strcat(txt, "{550000}/Fornecedor {FFFFFF}\t\t Para localizar o fornecedor de Cannabis \n\n");
        }
        case weaponproducer:
        {
            strcat(txt, "{800000}Precione \"N\" {FFFFFF}\t\t Para montar uma arma\n");
            strcat(txt, "{800000}/Armas {FFFFFF}\t\t Para ver/pegar para sí\n");
            strcat(txt, "{800000}/VenderArma {FFFFFF}\t\t Para vender à algum jogador(a)\n");
            strcat(txt, "{800000}/Fornecedor {FFFFFF}\t\t Para localizar o fornecedor de peças de armas\n\n");
        }
        case burglar:
        {
            strcat(txt, "{AA0000}/Assaltar {FFFFFF}\t\t Para assaltar um determinado(a) jogador(a)\n");
            strcat(txt, "{AA0000}/AssaltarCaixa {FFFFFF}\t\t Para assaltar um caixa eletrônico\n");
            strcat(txt, "{AA0000}/AssaltarCarroForte {FFFFFF}\t\t Para assaltar um Carro Forte\n\n");
        }
        case thief:
        {
            strcat(txt, "{D50000}/Assaltar {FFFFFF}\t\t Para assaltar um determinado(a) jogador(a)\n");
            strcat(txt, "{D50000}/AssaltarCaixa {FFFFFF}\t\t Para assaltar um caixa eletrônico\n");
            strcat(txt, "{D50000}/AssaltarCarroForte {FFFFFF}\t\t Para assaltar um Carro Forte\n");
            strcat(txt, "{D50000}Precione \"N\" {FFFFFF}\t\t Para pegar/remover gás \n");
            strcat(txt, "{D50000}Precione \"H\" {FFFFFF}\t\t Para colorcar gás no veículo \n\n");
            strcat(txt, "{D50000}Obs: Os gás estão localizados pertos de trailers \n\n");
        }
    }

    strcat(txt, "{0080FF}/P [mensagem] {FFFFFF}\t\t Para usar o chat profissão \n");
    strcat(txt, "{0080FF}/Lt {FFFFFF}\t\t Para localizar o local de trabalho \n\n");

    ShowPlayerDialog(playerid, 0, (IsPlayerMobile(playerid) ? (DIALOG_STYLE_LIST) : (DIALOG_STYLE_TABLIST_HEADERS)), "{FF0000}Ajuda - Profissão", txt, "Fechar", #);
    return 1;
}
CMD:trabalhar(playerid)
{
    if(!AgenciaEncaminhado[playerid])
        return SendClientMessage(playerid, Erro, "Você não foi encaminhado por nenhuma Agencia de Empregos");

    new profession = PlayerInfo[playerid][Semprofissao];

    if(!IsPlayerInRangeOfPoint(playerid, 2.0, Profission[profession][pfs_x], Profission[profession][pfs_y], Profission[profession][pfs_z]))
        return SendClientMessage(playerid, Erro, "Você não está no local de trabalho(LT)");

    GetForwardedAgency(playerid, PlayerInfo[playerid][Semprofissao]);
    return 1;
}
CMD:partida(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid), mot, lu, alar, por, cap, porma, ob;

    if(!IsPlayerInAnyVehicle(playerid))
        return SendClientMessage(playerid, Erro, "Você não está em um veículo");

    if(IsBike(vehicleid))
        return SendClientMessage(playerid, Erro, "Você está em uma bicicleta");

    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
        return SendClientMessage(playerid, Erro, "Você não está como motorista");

    if(IsBrokenVehicle(playerid))
        return SendClientMessage(playerid, Erro, "Este veículo está quebrado, compre kit reparo ou chame um mecânico");

    GetVehicleParamsEx(vehicleid,  mot, lu, alar, por, cap, porma, ob);

    if(mot == 0)
    {
        for(new i = 0; i < MAX_VEHICLES; i++)
        {
            if(vehicleid != PublicVehicle[i][pv_vehicle]) continue;

            if(!PublicVehicle[i][pv_gasoline])
                return SendClientMessage(playerid, Erro, "Este veículo não tem Gasolina");
        }

        SetVehicleParamsEx(vehicleid, 1, 1, alar, por, cap, porma, ob);
        SendClientMessage(playerid, Green, "Veiculo ligado");

        if(Fueling[playerid])
        {
            Fueling[playerid] = false;
            SendClientMessage(playerid, Yellow, "O abastecimento foi cancelado");
        }
    }
    else
    {
        SendClientMessage(playerid, Green, "Veiculo desligado");
        SetVehicleParamsEx(vehicleid, 0, 0, alar, por, cap, porma, ob);
    }
    return 1;
}
CMD:radio(playerid, params[])
{
    new tmp[128];

    if(sscanf(params, "s[128]", tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Radio [Link.mp3]");

    PlayAudioStreamForPlayer(playerid, tmp);
    SendClientMessage(playerid, White, "Para pausar digite: /radio stop ou espaço apenas");
    return 1;
}
CMD:radios(playerid)
{
    new txt[500];
    strcat(txt, "{FFFFFF}Hunter\n");
    strcat(txt, "{FFFFFF}SoundPOP\n");
    strcat(txt, "{FFFFFF}Forrozão\n");
    strcat(txt, "{FFFFFF}Sul Sertanejo\n");
    strcat(txt, "{FFFFFF}Funk\n");
    strcat(txt, "{FFFFFF}Rap\n");
    strcat(txt, "{FFFFFF}Jovem Pan\n");
    strcat(txt, "{FF0000}Desligar Radios");
    ShowPlayerDialog(playerid, radio, DIALOG_STYLE_LIST, "{FF0000}MP3", txt, "Continuar", "Fechar");
    return 1;
}
CMD:mudarnome(playerid)
{
    if(PlayerInfo[playerid][Reais] < 7)
        return SendClientMessage(playerid, Erro, "Você não tem Reais o suficiente para mudar o nome");

    ShowPlayerDialog(playerid, rename, DIALOG_STYLE_INPUT, "{FF0000}Mudar nome", "{FFFFFF}Digite seu novo nick e clique em {FF0000}Mudar\n{FFFFFF}Por favor não coloque {FF0000}ESPAÇO {FFFFFF}em seu nome:", "Mudar", "Sair");
    return 1;
}
CMD:meulevel(playerid)
{
    new txt[128];
    format(String, 50, "{FFFFFF} Nick: {FF0000}%s \n\n", PlayerInfo[playerid][Nome]);
    strcat(txt, String);
    format(String, 50, "{FFFFFF} Level: {1B6302}%d \n\n", PlayerInfo[playerid][Level]);
    strcat(txt, String);
    format(String, 50, "{FFFFFF} Experiência: {f29b0d}%d \n\n", PlayerInfo[playerid][Exp]);
    strcat(txt, String);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{00FF00}Meu Level", txt, "Fechar", "");
    return 1;
}
CMD:ajuda(playerid)
{
    new txt[200];
    strcat(txt, "{FFFFFF}Level \n");
    strcat(txt, "{FFFFFF}Salário \n");
    strcat(txt, "{FFFFFF}Comandos \n");
    strcat(txt, "{FFFFFF}Contatos \n");
    strcat(txt, "{FFFFFF}Casa \n");
    strcat(txt, "{FFFFFF}Empresa \n");
    strcat(txt, "{FFFFFF}Base \n");
    strcat(txt, "{FFFFFF}Veículo \n");
    strcat(txt, "{FFFFFF}Mercadoria \n");
    ShowPlayerDialog(playerid, help, DIALOG_STYLE_LIST, "{FF0000}Ajuda", txt, "Continuar", "Cancelar");
    return 1;
}
CMD:identidade(playerid)
{
    if(IsPlayerMobile(playerid))
    {
        new txt[1000], days, hours, minutes, seconds;

        TimeConvertEx(( PlayerInfo[playerid][vaccine] - gettime() ), days, hours, minutes, seconds);

        format(String, 50, "{FFFFFF}» Level: {00C40A}%d \n", PlayerInfo[playerid][Level]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Experiência: {00C40A}%d \n", PlayerInfo[playerid][Exp]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Reais: {00C40A}R$%d,00 \n", PlayerInfo[playerid][Reais]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Vacinas: %s%d \n", (IsPlayerVaccinated(playerid) ? ("{00C40A}") : ("{FF4000}")), (IsPlayerVaccinated(playerid) ? hours : 0));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Doença: %s%s \n", (PlayerInfo[playerid][disease] ? ("{FF4000}") : ("{00C40A}")), DiseaseName(playerid));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» VIP: %s \n", (VipInfo[playerid][Vip] ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Plano de Saúde: %s \n", (PlayerInfo[playerid][healthplan] ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Kit médicos: {00C40A}%d \n", PlayerInfo[playerid][medicalkit]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Saldo Sem Parar: {00C40A}$%s \n", IsMoney(PlayerInfo[playerid][nonstop], "."));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Sexo: {00C40A}%s \n", (PlayerInfo[playerid][sexo] == SEX_BOY ? ("Masculino") : ("Feminino")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Skin ID: {00C40A}%d \n", PlayerInfo[playerid][skin]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Dinheiro: {00C40A}$%s \n", IsMoney(PlayerInfo[playerid][Dinheiro], "."));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Dinamites: {00C40A}%d \n", PlayerInfo[playerid][c4]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Matou: {00C40A}%d {FFFFFF}- Morreu: {f84300}%d \n", PlayerInfo[playerid][Matou], PlayerInfo[playerid][Morreu]);
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Avisos: {f84300}%d \n", GetIntQuery(playerid, "Identidade", "avisos"));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Categoria A: %s \n", (IsPlayerCnhType(playerid, "a") ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Categoria B: %s \n", (IsPlayerCnhType(playerid, "b") ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Categoria C: %s \n", (IsPlayerCnhType(playerid, "c") ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» CHT: %s \n", (IsPlayerCnhType(playerid, "cht") ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Arrais: %s \n", (IsPlayerCnhType(playerid, "arrais") ? ("{00C40A}Sim") : ("{FF4000}Não")));
        strcat(txt, String);
        format(String, 50, "{FFFFFF}» Código: {00C40A}%s \n", PlayerInfo[playerid][Code]);
        strcat(txt, String);
        format(String, 150, "{FFFFFF}» E-mail: {00C40A}%s \n", PlayerInfo[playerid][Email]);
        strcat(txt, String);

        format(String, 100, "{0080FF}Identidade de {FFFFFF}%s", PlayerInfo[playerid][Nome]);

        ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, String, txt, "Fechar", #);
        return 1;
    }
    else
    {
        if(Identity[playerid])
        {
            HideTDPlayerIdentity(playerid);
        }
        else
        {
            if(GetPlayerPing(playerid) > MAX_PING)
                return SendClientMessage(playerid, Erro, "Seu ping está alto e você não pode usar textdraws ( Motivo: Evitar RT )");

            new days, hours, minutes, seconds;

            TimeConvertEx(( PlayerInfo[playerid][vaccine] - gettime() ), days, hours, minutes, seconds);

            PlayerTextDrawSetPreviewModel(playerid, TDPlayerIdentity[playerid][tdi_skin], PlayerInfo[playerid][skin]);

            format(String, 50, "~r~%s", PlayerInfo[playerid][Nome]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_name], String);
            format(String, 50, "Skin (ID:%d)", PlayerInfo[playerid][skin]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_skinid], String);
            format(String, 50, "Level: %d", PlayerInfo[playerid][Level]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_level], String);
            format(String, 50, "Experiencia: %d", PlayerInfo[playerid][Exp]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_exp], String);
            format(String, 50, "Reais: R$%d,00", PlayerInfo[playerid][Reais]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_reais], String);
            format(String, 50, "Vacina(s): %s%d", (IsPlayerVaccinated(playerid) ? ("~g~") : ("~r~")), (IsPlayerVaccinated(playerid) ? hours : 0));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_vaccine], String);
            format(String, 50, "Doenca: %s%s", (PlayerInfo[playerid][disease] ? ("~r~") : ("~g~")), DiseaseName(playerid));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_disease], String);
            format(String, 50, "VIP: %s", (VipInfo[playerid][Vip] ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_vip], String);
            format(String, 50, "Plano de Saude: %s", (PlayerInfo[playerid][healthplan] ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_health], String);
            format(String, 50, "Kit medico(s): %d", PlayerInfo[playerid][medicalkit]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_medic_kit], String);
            format(String, 50, "Saldo Sem Parar: %s", IsMoney(PlayerInfo[playerid][nonstop], "."));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_nonstop], String);
            format(String, 50, "Sexo: %s", (PlayerInfo[playerid][sexo] == SEX_BOY ? ("Masculino") : ("Feminino")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_sex], String);
            format(String, 50, "Dinheiro: %s", IsMoney(PlayerInfo[playerid][Dinheiro], "."));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_money], String);
            format(String, 50, "Dinamites: %d", PlayerInfo[playerid][c4]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_c4], String);
            format(String, 50, "Matou: %d - Morreu: %d", PlayerInfo[playerid][Matou], PlayerInfo[playerid][Morreu]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_kd], String);
            format(String, 50, "Aviso(s): %d", GetIntQuery(playerid, "Identidade", "avisos"));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_warning], String);
            format(String, 50, "Categoria A: %s", (IsPlayerCnhType(playerid, "a") ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_cnh_a], String);
            format(String, 50, "Categoria B: %s", (IsPlayerCnhType(playerid, "b") ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_cnh_b], String);
            format(String, 50, "Categoria C: %s", (IsPlayerCnhType(playerid, "c") ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_cnh_c], String);
            format(String, 50, "CHT: %s", (IsPlayerCnhType(playerid, "cht") ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_cnh_cht], String);
            format(String, 50, "Arrais: %s", (IsPlayerCnhType(playerid, "arrais") ? ("~g~Sim") : ("~r~N/A")));
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_cnh_arrais], String);
            format(String, 50, "E-mail: %s", PlayerInfo[playerid][Email]);
            PlayerTextDrawSetString(playerid, TDPlayerIdentity[playerid][tdi_email], String);

            ShowTDPlayerIdentity(playerid);
        }
    }
    return 1;
}
CMD:relatorio(playerid, params[])
{
    if(PlayerInfo[playerid][blockReport])
        return SendClientMessage(playerid, Erro, "Relatório bloqueado por flood, aguarde alguns segundos...");

    new id, tmp[128];

    if(sscanf(params, "us[128]", id, tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Relatorio [id/nome] [relatório]");

    if(id == INVALID_PLAYER_ID || !PlayerInfo[id][Logado])
        return SendClientMessage(playerid, Erro, "Jogador(a) não conectado(a)");

    PlayerInfo[playerid][blockReport] = true;
    SetTimerEx("UnlockingReport", 60000, false, "d", playerid);

    SendClientMessage(playerid, White, "Seu relatorio foi enviado com sucesso para a Adminstração");

    format(String, MAX_STRING, "Relatório de %s[%d] acusando: %s[%d] de %s", PlayerInfo[playerid][Nome], playerid, PlayerInfo[id][Nome], id, tmp);

    for(new i; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerIntern(i))
        {
            SendClientMessage(i, 0x80FFFFAA, String);
            GameTextForPlayer(i, "~n~~r~RELATORIO" , 3000, 3);
            PlayerPlaySound(i, 1057, 0, 0, 0);
        }
    }
    return 1;
}
CMD:duvida(playerid, params[])
{
    if(PlayerInfo[playerid][blockDoubt])
        return SendClientMessage(playerid, Erro, "Duvida bloqueada por flood, aguarde alguns segundos...");

    new tmp[128];

    if(sscanf(params, "s[128]", tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Duvida [duvida]");

    PlayerInfo[playerid][blockDoubt] = true;
    SetTimerEx("UnlockingDoubt", 60000, false, "d", playerid);

    SendClientMessage(playerid, White, "Sua duvida foi enviada a Administraçáo, aguarde à resposta");
    format(String, MAX_STRING, "Duvida de %s[%d]: %s", PlayerInfo[playerid][Nome], playerid, tmp);

    for(new i; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerIntern(i))
        {
            SendClientMessage(i, 0x80FFFFAA, String);
            GameTextForPlayer(i, "~n~~b~DUVIDA" , 3000, 3);
            PlayerPlaySound(i, 1057, 0, 0, 0);
        }
    }
    return 1;
}
CMD:anuncio(playerid, params[])
{
    if(PlayerInfo[playerid][blockAd])
        return SendClientMessage(playerid, Erro, "Anúncio bloqueado por flood, aguarde alguns segundos...");

    new tmp[128];

    if(sscanf(params, "s[128]", tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Anuncio [anuncio]");

    PlayerInfo[playerid][blockAd] = true;
    SetTimerEx("UnlockingAd", 60000, false, "d", playerid);

    format(String, MAX_STRING, "VRC-Anúncios ~ %s[%d] diz: %s", PlayerInfo[playerid][Nome], playerid, tmp);
    SendClientMessageToAll(Green, String);
    return 1;
}
CMD:creditos(playerid)
{
    new txt[1500];

    format(String, MAX_STRING, "{FF0000} GameMode: {FFFFFF}Vida Real Crias - VRC RPG v%s \n\n", SERVER_VERSION);
    strcat(txt, String);
    strcat(txt, "{FFFFFF} Desenvolvido e Atualizado por: {088fd2}Henrique Calenzo \n\n");
    strcat(txt, "{1b6302} Agradecimentos Especiais; \n\n");
    strcat(txt, "{f29b0d} pBlueG - {FFFFFF}MySQL \n");
    strcat(txt, "{f29b0d} Emmet_ - {FFFFFF}sscanf \n");
    strcat(txt, "{f29b0d} Incognito - {FFFFFF}streamer \n");
    strcat(txt, "{f29b0d} YourShadow - {FFFFFF}Pawn.CMD \n");
    strcat(txt, "{f29b0d} rootcause - {FFFFFF}Ideia de sistemas ( Casas, Empresas e Gari ) \n\n");
    format(String, MAX_STRING, "{218721} %s \n\n", SERVER_FORUM);
    strcat(txt, String);
    strcat(txt, "{FFFFFF} © Copyright 2020 - 2020 Vida Real Crias");
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{00CED1}Créditos{FFFFFF}",txt, "Fechar", "");
    return 1;
}
CMD:regras(playerid)
{
    new textogrande[3000];
	strcat(textogrande, "{FFFFFF}»{FF0000} Vaga de Adm {FFFFFF}- Nunca fique pedindo se tem vagas para Ajudante/Moderador/Administrador, todos jogadores sempre sáo avaliados\naquele que joga direito e ajuda os demais jogadores sempre tem uma grande chance quando abrimos Vagas\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Drive By DB {FFFFFF}- Nunca mate um jogador de dentro de um veiculo, é proibido e receberá puniçóes\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Death Match / DM{FFFFFF}- Não faça DM em locais Públicos ( Ex: Prefeituras, Bancos, agência, etc..) pois receberá punições,\n usem a arena, la o DM é liberado\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Ofensas, Provocacoes e Perturbacoes - {FFFFFF}Perturbaçáo excessiva(floods, discussoes, etc... ) ou palavreado de origem\nofensiva no chat Público, seja por religiao ou preconceito, bem como assuntos náo relacionados ao jogo, como\nprovocacoes e criticas a jogadores ou a administradores, sera entendido como perturbaçáo e receberá punicoes\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Divugaçáo {FFFFFF}- É proibido Mensagens que contenham assuntos ou propagandas relacionados a outros servidores\nbem como divugacoes que ip ou de cheats\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Anti-AFK{FFFFFF}- Nunca tente sabotar o AFK é proibido e se algum ADM pegar sabotando será banido sem aviso\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Cheater{FFFFFF}- Qualquer programa ou 'mods' que possa lhe dar vantagem em jogo ou perante outros jogadores\nserá considerado como uso de cheater e será banido sem aviso\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Beneficios{FFFFFF}-  Nunca fique pedidndo pra algum ADM dar ( level dinheiro etc... ) vocé deve jogar para conseguir\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Anti-RPG{FFFFFF}- Nunca se atire na frente de veiculos, náo saia do servidor ( algemado, perseguiçóes, etc... ) caso contrario\n receberá puniçóes e até banimento\n\n");
	strcat(textogrande, "{FFFFFF}»{FF0000} Abuso de Bugs{FFFFFF}- Nunca abuse de bugs, sempre reporte-os para administraçáo caso contrario banido sem aviso previo\n\n");
	strcat(textogrande, "{0AB752}» VIPs seráo julgados da mesma forma que os demais jogadores\n\n");
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Regras", textogrande, "Fechar", "");
	return 1;
}
CMD:vantagensvip(playerid)
{
    new txt[1000];
	strcat(txt, "{FFFF00}»{FFFFFF} Sistema auto tuning \n");
    strcat(txt, "{FFFF00}»{FFFFFF} Neon personalizado \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Nitro infinito \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Nick com prefixo [VIP] no chat \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Mudar a cor da Tag [VIP] \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Reparo de veículo \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Virar veículo caso capote-o \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Pintar veículo \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Tunar veículo \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Colete \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Jetpack \n");
	strcat(txt, "{FFFF00}»{FFFFFF} Tag VIP acima da skin \n");
    strcat(txt, "{FFFF00}»{FFFFFF} Chat exclusivo VIP \n");
    strcat(txt, "{FFFF00}»{FFFFFF} UP 4/4 experiências \n");
    strcat(txt, "{FFFF00}»{FFFFFF} Kit arena grátis\n");
    strcat(txt, "{FFFF00}»{FFFFFF} Salário VIP \n");
    strcat(txt, "{FFFF00}»{FFFFFF} Máximo 10 Veículos no ( menuveiculos )\n");
    strcat(txt, "{FFFF00}»{FFFFFF} Máximo 10 Armas na ( mochila )\n");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Vantagens VIP", txt, "Fechar", "");
	return 1;
}
CMD:comandosvip(playerid)
{
    new txt[1000];
    strcat(txt, "{FFFFFF}» {FFFF00}/Neon {FFFFFF}- Adicione luzes personalizada em seu veículo \n");
    strcat(txt, "{FFFFFF}» {FFFF00}/Jetpack {FFFFFF}- Para pegar uma mochila a jato \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Colete {FFFFFF}- Para pegar um colete \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Virar {FFFFFF}- Para virar seu veículo \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Pintar {FFFFFF}- Para pintar o seu veículo \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Tunar {FFFFFF}- Para tunar o seu veículo \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Paintjob {FFFFFF}- Para personalizar a pintura do seu veículo \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/Tag {FFFFFF}- Para mudar a cor da TAG [VIP] \n");
	strcat(txt, "{FFFFFF}» {FFFF00}/V {FFFFFF}- Chat exclusivo VIP \n");
    strcat(txt, "{FFFFFF}» {FFFF00}/VOn {FFFFFF}- Ligue o chat VIP \n");
    strcat(txt, "{FFFFFF}» {FFFF00}/VOff {FFFFFF}- Desligue o chat VIP \n");
    strcat(txt, "{FFFFFF}» {FFFF00}/Vencimento {FFFFFF}- Para ver o dia do vencimento do seu vip \n");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos VIP", txt, "Fechar", "");
	return 1;
}
CMD:animes(playerid)
{
    new txt[1000];
    strcat(txt, "{FFFFFF}/dance 1-4 ~ /maosacima ~ /bebado ~ /bomba ~ /mirar ~ /merda ~ /pormascara \n");
    strcat(txt, "/roubar ~ /cruzar ~ /deitar ~ /abaixar ~ /vomitar ~ /comer ~ /chamar ~ /passaramao \n");
    strcat(txt, "/cobrar ~ /overdose ~ /fumar ~ /sentar ~ /conversar ~ /fodase ~ /luta ~ /observar  \n");
    strcat(txt, "/mijar ~ /parar \n");
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Animes", txt, "Fechar", "");
    return 1;
}
CMD:dance(playerid, params[])
{
    new id;

    if(sscanf(params, "d", id))
    	return SendClientMessage(playerid, 0xFF0000FF,"Use: /dance [1-4]");

    if(id < 1 || id > 4)
        return SendClientMessage(playerid, 0xFF0000FF,">Digite /dance [1-4]");

    if(id == 1)
    {
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
    }
    else if(id == 2)
    {
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
    }
    else if(id == 3)
    {
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
    }
    else if(id == 4)
    {
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
    }
    return 1;
}
CMD:maoscima(playerid)
{
    SetPlayerSpecialAction(playerid, 10);
	return 1;
}
CMD:bebado(playerid)
{
	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 0);
	return 1;
}
CMD:bomba(playerid)
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:mirar(playerid)
{
	ApplyAnimation(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:merda(playerid)
{
	ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:pormascara(playerid)
{
	ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
    return 1;
}
CMD:roubar(playerid)
{
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:cruzar(playerid)
{
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:deitar(playerid)
{
	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:abaixar(playerid)
{
	ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:vomitar(playerid)
{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:comer(playerid)
{
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:chamar(playerid)
{
	ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:passaramao(playerid)
{
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:cobrar(playerid)
{
	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:overdose(playerid)
{
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:fumar(playerid)
{
	ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:sentar(playerid)
{
	ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:conversar(playerid)
{
	ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.0, 0, 0, 0, 0, 0);
    return 1;
}
CMD:fodase(playerid)
{
	ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:luta(playerid)
{
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:observar(playerid)
{
	ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:mijar(playerid)
{
	SetPlayerSpecialAction(playerid, 68);
	return 1;
}
CMD:parar(playerid)
{
    ClearAnimations(playerid);
    return 1;
}
CMD:admins(playerid)
{
    new txt[1400], adminon;

    if(!IsPlayerMobile(playerid)) strcat(txt, "{FFFFFF}Nome\t {FFFFFF}Cargo\t {FFFFFF}Status\n");

    for(new x = 0; x < MAX_PLAYERS; x++)
    {
        if(!IsPlayerIntern(x)) continue;

        format(String, 100, "{FFFFFF}%s\t %s\t %s\n", PlayerInfo[x][Nome], CargoAdminColor(x), (AntiAfk[x][aa_afk] ? ("{FF4000}AFK") : ("{1B6302}Online")));
        strcat(txt, String);
        adminon++;
    }

    if(!adminon)
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Admins Online [ {FF0000}0{FFFFFF} ]", "{FF0000}Náo há administrador ( ADM ) online no momento!", "Fechar", #);

    format(String, 100, "{FFFFFF}Admins Online [ {328E0A}%d{FFFFFF} ]", adminon);
    ShowPlayerDialog(playerid, 0, (IsPlayerMobile(playerid) ? DIALOG_STYLE_LIST : DIALOG_STYLE_TABLIST_HEADERS), String, txt, "Fechar", #);
    return 1;
}
CMD:presos(playerid)
{
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, 248.94, 67.60, 1003.64) && !IsPlayerInRangeOfPoint(playerid, 2.0, 252.16, 67.78, 1003.64))
        return SendClientMessage(playerid, Erro, "Você não está em nenhum departamento de polícia");

    new str[1400], presoson, hours, minutes, seconds;

    for(new player = 0; player < MAX_PLAYERS; player++)
    {
        if(!PlayerInfo[player][Logado]) continue;

        if(!PrisonEnum[player][pTempo]) continue;

        formatSeconds(PrisonEnum[player][pTempo], hours, minutes, seconds);

        format(str, 1400, "%s{FFFFFF} %s{FFFFFF}[%d] \t%02d:%02d:%02d \t{C50000}%s \n", str, PlayerInfo[player][Nome], player, hours, minutes, seconds, PrisonEnum[player][pCadeia]);
        presoson++;
        continue;
    }

    if(!presoson)
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Presos Online [ {FF0000}0{FFFFFF} ]", "{FF0000}Náo há presos online no momento!", "Fechar", "");

    format(String, 100, "{FFFFFF}Presos Online [ {328E0A}%d{FFFFFF} ]", presoson);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, String, str, "Fechar", #);
    return 1;
}

CMD:aceitar(playerid)
{
    if(AdvogadoOfertou[playerid])
    {
        AdvogadoOfertou[playerid] = false;
        AdvogadoAceitou[playerid] = true;
        return 1;
    }
    else if(IceCreamOffer[playerid])
    {
        IceCreamOffer[playerid] = false;
        IceCreamAccepted[playerid] = true;
        return 1;
    }
    else if(ParamedicOffer[playerid])
    {
        ParamedicOffer[playerid] = false;
        ParamedicAccepted[playerid] = true;
        return 1;
    }
    else if(wpOffer[playerid])
    {
        wpOffer[playerid] = false;
        wpAccepted[playerid] = true;
        return 1;
    }
    else
    {
        SendClientMessage(playerid, Erro, "Você não recebeu nenhuma oferta");
    }
    return 1;
}
CMD:recusar(playerid)
{
    if(AdvogadoOfertou[playerid])
    {
        AdvogadoOfertou[playerid] = false;
        AdvogadoRecusou[playerid] = true;
    }
    else if(IceCreamOffer[playerid])
    {
        IceCreamOffer[playerid] = false;
        IceCreamRefused[playerid] = true;
        return 1;
    }
    else if(ParamedicOffer[playerid])
    {
        ParamedicOffer[playerid] = false;
        ParamedicRefused[playerid] = true;
        return 1;
    }
    else if(wpOffer[playerid])
    {
        wpOffer[playerid] = false;
        wpRefused[playerid] = true;
    }
    else
    {
        SendClientMessage(playerid, Erro, "Você não recebeu nenhuma oferta");
    }
    return 1;
}
CMD:advogados(playerid)
{
    new txt[1400], advon = 0;

    for(new x = 0; x < MAX_PLAYERS; x++)
    {
        if(PlayerInfo[x][Profissao] == lawyer && PlayerInfo[x][Logado] == true)
        {
            format(txt, 100, "%s{8000FF} %s{FFFFFF} [%d] \n", txt, PlayerInfo[x][Nome], x);
            advon++;
        }
    }

    if(advon == 0)
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FFFFFF}Advogados Online [ {FF0000}0{FFFFFF} ]", "{FF0000}Náo há advogados online no momento!", "Fechar", #);

    format(String, 100, "{FFFFFF}Advogados Online [ {328E0A}%d{FFFFFF} ]", advon);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, String, txt, "Fechar", #);
    return 1;
}
CMD:advogado(playerid, params[])
{
    if(!PrisonEnum[playerid][pTempo])
        return SendClientMessage(playerid, Erro, "Você não está preso para poder contatar um advogado(a)");

    new id, tmp[128];

    if(sscanf(params, "us[128]", id, tmp))
        return SendClientMessage(playerid, Erro, "Digite: /Advogado [id/nome] [mensagem]");

    if(id == INVALID_PLAYER_ID || !PlayerInfo[id][Logado])
        return SendClientMessage(playerid, Erro, "Jogador(a) não conectado(a)");

    if(playerid == id)
        return SendClientMessage(playerid, Erro, "Você não pode efetuar comando em sí mesmo");

    if(PlayerInfo[id][Profissao] != lawyer)
        return SendClientMessage(playerid, Erro, "Jogador(a) não é advogado(a)");

    format(String, MAX_STRING, "Mensagem enviada para o advogado(a) %s[%d] ( %s )", PlayerInfo[id][Nome], id, tmp);
    SendClientMessage(playerid, 0x8000FFAA, String);
    format(String, MAX_STRING, "Mensagem recebida do presidiário %s[%d] ( %s )", PlayerInfo[playerid][Nome], playerid, tmp);
    SendClientMessage(id, 0x8000FFAA, String);
    return 1;
}
CMD:vips(playerid)
{
    new txt[3000], j = 0;

    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerVip(i) && PlayerInfo[i][Logado])
        {
            format(txt, 100, "%s {FFFFFF}%s[%d] \n", txt, PlayerInfo[i][Nome], i);
            j++;
        }
    }

    if(!j)
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Vips", "{FFFFFF}Não tem vips online no momento", "Fechar", #);

    ShowPlayerDialog(playerid, vipss, DIALOG_STYLE_LIST, "{FF0000}Vips", txt, "Fechar", #);
    return 1;
}
CMD:transferir(playerid, params[])
{
    if((gettime() - PlayerInfo[playerid][t_transaction]) < 600)
    {
        new days, hours, minutes, seconds;

        TimeConvertEx(600 - (gettime() - PlayerInfo[playerid][t_transaction]), days, hours, minutes, seconds);

        if(minutes)
            format(String, 128, "Você acabou de transferir, aguarde %d minuto e %d segundos...", minutes, seconds);
        else
            format(String, 128, "Você acabou de transferir, aguarde %d segundos...", seconds);

        SendClientMessage(playerid, Erro, String);
        return 1;
    }

    new id, value;

    if(sscanf(params, "dd", id, value))
        return SendClientMessage(playerid, Erro, "Digite: /Transferir [id] [valor]");

    if(id == INVALID_PLAYER_ID || !PlayerInfo[id][Logado])
        return SendClientMessage(playerid, Erro, "Jogador(a) não está conectado(a)");

    if(playerid == id)
        return SendClientMessage(playerid, Erro, "Você não pode efetuar comando em sí mesmo");

    if(GetDistanceBetweenPlayers(playerid, id) > 10)
        return SendClientMessage(playerid, Erro, "Você está muito longe, chegue mais perto");

    if(PlayerInfo[playerid][Dinheiro] < value)
        return SendClientMessage(playerid, Erro, "Você não tem dinheiro o suficiente");

    if(value < 1 || value > 50000)
        return SendClientMessage(playerid, Erro, "Valores apenas de $1 até $50.000");

    new query[200];
    mysql_format(IDConexao, query, 200, "INSERT INTO `Transfer` (`value`, `date`, `id_received`, `id_contas`) VALUES ('%d', NOW(), '%d', '%d')", value, PlayerInfo[id][ID], PlayerInfo[playerid][ID]);
    mysql_query(IDConexao, query);

    PlayerInfo[playerid][Dinheiro] -= value;
    UpdatePlayerMoney(playerid);
    PlayerInfo[id][Dinheiro] += value;
    UpdatePlayerMoney(id);

    format(String, MAX_STRING, "Transferência de $%s para o jogador(a) %s[%d]", IsMoney(value, "."), PlayerInfo[id][Nome], id);
    SendClientMessage(playerid, Yellow, String);
    format(String, MAX_STRING, "O(A) Jogador(a) %s[%d] transferiu $%s para você", PlayerInfo[playerid][Nome], playerid, IsMoney(value, "."));
    SendClientMessage(id, Yellow, String);
    return 1;
}
CMD:toplevel(playerid)
{
    new name[MAX_PLAYER_NAME], value, txt[2000];

    new Cache:result = mysql_query(IDConexao, "SELECT `Nome`, `Identidade`.`level` FROM `Contas` INNER JOIN `Identidade` ON (`Identidade`.`id_contas`=`Contas`.`id`) ORDER BY `Identidade`.`level` DESC LIMIT 10");

    strcat(txt, "{FFFFFF}Top\t {FFFFFF}Nome\t {FFFFFF}Leveis\n");

    for(new row = 0; row < cache_num_rows(); row++)
    {
        cache_get_value_name(row, "Nome", name);
        cache_get_value_int(row, "level", value);

        format(String, 100, "{1b6302}%dº\t {FFFFFF}%s\t {F87A02}%d\n", (row + 1), name, value);
        strcat(txt, String);
    }

    cache_delete(result);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top {1B6302}Level", txt, "Fechar", #);
}
CMD:topdinheiro(playerid)
{
    new name[MAX_PLAYER_NAME], value, valuebank, txt[2000];

    new Cache:result = mysql_query(IDConexao, "SELECT `Nome`, `Identidade`.`dinheiro`, `Identidade`.`saldobancario` FROM `Contas` INNER JOIN `Identidade` ON (`Identidade`.`id_contas`=`Contas`.`id`) ORDER BY (`Identidade`.`dinheiro`+`Identidade`.`saldobancario`) DESC LIMIT 10");

    strcat(txt, "{FFFFFF}Top\t {FFFFFF}Nome\t {FFFFFF}Dinheiro\n");

    for(new row = 0; row < cache_num_rows(); row++)
    {
        cache_get_value_name(row, "Nome", name);
        cache_get_value_int(row, "dinheiro", value);
        cache_get_value_int(row, "saldobancario", valuebank);

        format(String, 100, "{1b6302}%dº\t {FFFFFF}%s\t {F87A02}$%s\n", (row + 1), name, IsMoney((value + valuebank), "."));
        strcat(txt, String);
    }

    cache_delete(result);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top {1B6302}Dinheiro", txt, "Fechar", #);
    return 1;
}
CMD:topkill(playerid)
{
    new name[MAX_PLAYER_NAME], value, txt[2000];

    new Cache:result = mysql_query(IDConexao, "SELECT `Nome`, `Identidade`.`matou` FROM `Contas` INNER JOIN `Identidade` ON (`Identidade`.`id_contas`=`Contas`.`id`) ORDER BY `Identidade`.`matou` DESC LIMIT 10");

    strcat(txt, "{FFFFFF}Top\t {FFFFFF}Nome\t {FFFFFF}Kill\n");

    for(new row = 0; row < cache_num_rows(); row++)
    {
        cache_get_value_name(row, "Nome", name);
        cache_get_value_int(row, "matou", value);

        format(String, 100, "{1b6302}%dº\t {FFFFFF}%s\t {F87A02}%d\n", (row + 1), name, value);
        strcat(txt, String);
    }

    cache_delete(result);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top {1B6302}Kill", txt, "Fechar", #);
    return 1;
}
CMD:topprocurado(playerid)
{
    new name[MAX_PLAYER_NAME], value, txt[2000];

    new Cache:result = mysql_query(IDConexao, "SELECT `Nome`, `Identidade`.`estrelas` FROM `Contas` INNER JOIN `Identidade` ON (`Identidade`.`id_contas`=`Contas`.`id`) ORDER BY `Identidade`.`estrelas` DESC LIMIT 10");

    strcat(txt, "{FFFFFF}Top\t {FFFFFF}Nome\t {FFFFFF}Estrelas\n");

    for(new row = 0; row < cache_num_rows(); row++)
    {
        cache_get_value_name(row, "Nome", name);
        cache_get_value_int(row, "estrelas", value);

        format(String, 100, "{1b6302}%dº\t {FFFFFF}%s\t {F87A02}%d\n", (row + 1), name, value);
        strcat(txt, String);
    }

    cache_delete(result);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Top {1B6302}Procurado", txt, "Fechar", #);
    return 1;
}
CMD:consertar(playerid)
{
    if(!PlayerInfo[playerid][kitrepair])
        return SendClientMessage(playerid, Erro, "Você não tem Kit Reparos");

    new Float:x, Float:y, Float:z;

    for(new vehicleid = 0; vehicleid < MAX_VEHICLES; vehicleid++)
    {
        GetVehiclePos(PublicVehicle[vehicleid][pv_vehicle], x, y, z);

        if(PublicVehicle[vehicleid][pv_vehicle] == INVALID_VEHICLE_ID)
            continue;

        if(!IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
            continue;

        if(!IsBrokenVehicle(PublicVehicle[vehicleid][pv_vehicle]))
            return SendClientMessage(playerid, Erro, "Este veículo não está quebrado");

        PlayerInfo[playerid][kitrepair] -= 1;

        new query[100];
        mysql_format(IDConexao, query, 100, "UPDATE `Itens` SET `kitrepair`='%d' WHERE `id_contas`='%d'", PlayerInfo[playerid][kitrepair], PlayerInfo[playerid][ID]);
        mysql_query(IDConexao, query);

        TogglePlayerControllable(playerid, false);
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0);
        PlayerRepairVehicle[playerid] = true;
        ShowTDLoading(playerid);

        RepairingVehicle(playerid, PublicVehicle[vehicleid][pv_vehicle]);
        return 1;
    }

    SendClientMessage(playerid, Erro, "Você está longe do veículo, chegue mais perto");
    return 1;
}
CMD:codigo(playerid)
{
    format(String, MAX_STRING, "Seu código: {FF4000}%s{FFFFFF}, não divulgue-o!", PlayerInfo[playerid][Code]);
    return SendClientMessage(playerid, White, String);
}
CMD:estudar(playerid)
{
    ShowPlayerDialog(playerid, study, DIALOG_STYLE_LIST, "{FF0000}Estudos", "{FFFFFF}Auto Escola", "Estudar", "Cancelar");
    return 1;
}
CMD:coresid(playerid)
{
	new str[3400]="", count=0;

	for(new i = 0; i < sizeof(VehHexColors); i++)
	{
		format(str, 3400, "%s{%06x}%03d ", str, VehHexColors[count] >>> 8, count);
		count++;

        switch(count)
        {
            case 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240: strcat(str, "\n");
        }
	}

    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Cores ID", str, "Fechar", #);
	return 1;
}

CMD:192(playerid)
{
    if(!PlayerInfo[playerid][disease])
        return SendClientMessage(playerid, Erro, "Você não está doente");

    for(new player = 0; player < MAX_PLAYERS; player++)
    {
        if(PlayerInfo[player][Profissao] == paramedic)
        {
            new Float:x, Float:y, Float:z;

            GetPlayerPos(playerid, x, y, z);
            GetPlayer2DZone(zone, MAX_ZONE_NAME, x, y);

            format(String, MAX_STRING, "O(A) Jogador(a) %s[%d] está pedindo SOS na localidade ( %s )", PlayerInfo[playerid][Nome], playerid, zone);
            SendClientMessage(player, Profission[PlayerInfo[playerid][Profissao]][pfs_color], String);
        }
    }
    return 1;
}
